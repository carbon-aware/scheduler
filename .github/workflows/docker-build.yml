name: Build and Push scheduler Docker Image

on:
  push:
    tags:
      - "v*.*.*"
    branches: [main, master]
    paths:
      - 'scheduler/**'
      - '.github/workflows/.yml'
  workflow_dispatch:

env:
  IMAGE_NAME: carbon-aware/scheduler

jobs:
  build-and-push:
    name: Build and Push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to Docker
      - uses: 'docker/login-action@v1'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable=${{ github.ref_type == 'tag' }}
            type=raw,value=dev,enable=${{ github.ref_type == 'branch' }}
            type=sha,format=short,enable=${{ github.ref_type == 'branch' }}

      # Set image tag based on event type
      - name: Set image tag
        id: set-tag
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            # For releases, use the tag without the 'v' prefix
            TAG="${{ github.ref }}"
            TAG="${TAG#v}"
            echo "tag=${TAG}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_type }}" == "branch" ]]; then
            # For pushes to main/master, use 'dev' plus short commit SHA
            TAG="dev-$(git rev-parse --short HEAD)"
            echo "tag=${TAG}" >> $GITHUB_OUTPUT
          else
            # For manual workflow runs, use 'dev' plus timestamp
            TAG="dev-$(date +%s)"
            echo "tag=${TAG}" >> $GITHUB_OUTPUT
          fi
          echo "Using tag: ${TAG}"
      
      # Build and push using Docker action
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: ./scheduler
          file: ./scheduler/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
